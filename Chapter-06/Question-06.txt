Chapter : 6 - item : 1 - print N
ส่งมาแล้ว 0 ครั้ง
จงเขียนฟังก์ชั่นที่แสดงผลเลข 1 จนถึง n
และฟังก์ชั่นที่แสดงผลเลขตั้งแต่ n จนถึง 1
โดยแสดงผลตามตัวอย่าง
****ห้ามใช้คำสั่ง len, for, while, do while, split*****
หมายเหตุ ฟังก์ชันต้องมี parameter แค่เพียง 1 ตัว
def print1ToN(n):
    #code here
def printNto1(n):
    #code here
n = int(input("Enter Input : "))
print1ToN(n)
printNto1(n)
Enter Input : 6
1 2 3 4 5 6 6 5 4 3 2 1 
Enter Input : -1
1 1 
Enter Input : 1
1 1 



Chapter : 6 - item : 2 - Reverse Sort List
 ส่งมาแล้ว 0 ครั้ง
จงเขียนฟังก์ชั่นสำหรับการเรียงค่าใน List ของจำนวนเต็มโดยจะเรียงค่าจากมากไปน้อย
****ห้ามใช้ for/while และฟังก์ชั่นอื่นๆในการวนลูป ให้ใช้ recursion ในการเขียนเท่านั้น**
Enter your List : 1,2,3,4,5,6,7,8
List after Sorted : [8, 7, 6, 5, 4, 3, 2, 1]
Enter your List : 4,1,3,4,6,9,5,6,7,8
List after Sorted : [9, 8, 7, 6, 6, 5, 4, 4, 3, 1]
Enter your List : 0,0,0,0,0
List after Sorted : [0, 0, 0, 0, 0]


Chapter : 6 - item : 3 - GCD
 ส่งมาแล้ว 0 ครั้ง
เขียนโปรแกรมสำหรับหา หรม. ของเลข 2 ตัว
****ห้ามใช้คำสั่ง len, for, while, do while หรือ *****
หมายเหตุ ฟังก์ชันต้องมี parameter แค่เพียง 2 ตัว
บทนิยาม
ตัวหารร่วมมาก หรือ ห.ร.ม. (อังกฤษ: greatest common divisor: gcd) ของจำนวนเต็มสองจำนวนซึ่งไม่เป็นศูนย์พร้อมกัน คือจำนวนเต็มที่มากที่สุดที่หารทั้งสองจำนวนลงตัว
Enter Input : 8 4
The gcd of 8 and 4 is : 4
Enter Input : 10 20
The gcd of 20 and 10 is : 10
Enter Input : 12 18
The gcd of 18 and 12 is : 6
Enter Input : 9 7
The gcd of 9 and 7 is : 1
Enter Input : 0 5
The gcd of 5 and 0 is : 5
Enter Input : -6 9
The gcd of 9 and -6 is : 3
Enter Input : -24 -36
The gcd of -36 and -24 is : 12
Enter Input : 0 0
Error! must be not all zero.



Chapter : 6 - item : 4 - หอคอยแห่งฮานอย
 ส่งมาแล้ว 0 ครั้ง
เขียนโปรแกรมแก้ปัญหา หอคอยแห่งฮานอย โดยเราจะมีแทงไม้อยู่3แท่งคือ A B C และรับ input เป็นจำนวนแผ่นไม้ที่วางซ้อนกันให้แสดงลำดับการย้ายแผ่นไม้ทั้งหมดจากแท่ง A ไปยัง แท่งC โดยแผ่นไม้ที่มีขนาดเล็กกว่าจะอยู่ข้างบนแผ่นไม้ที่มีขนาดใหม่กว่าเสมอ(ห้ามวางแผ่นเล็กกว่าไว้ข้างล่าง)
****ห้ามใช้คำสั่ง for, while, do while*****
หมายเหตุ ทุกฟังก์ชันต้องมี parameter มากที่สุดไม่เกิน 5 ตัว
คำแนะนำ ให้สร้างฟังก์ชันสำหรับแสดงผล แยกต่างหาก และใช้ list ในการเก็บข้อมูลของแท่งไม้แต่ละแท่ง
และให้ระวังเรื่องการสลับ list ให้ดีๆ
หากมีข้อสงสัยเกี่ยวกับ หอคอยแห่งฮานอย สามารถสอบถาม TA เพิ่มเติม หรือ ลองเล่นได้ที่ https://www.mathsisfun.com/games/towerofhanoi.html
def move(n,A,B,C,maxn):
    #code here
n = int(input("Enter Input : "))
Enter Input : 3
|  |  |
1  |  |
2  |  |
3  |  |
move 1 from  A to C
|  |  |
|  |  |
2  |  |
3  |  1
move 2 from  A to B
|  |  |
|  |  |
|  |  |
3  2  1
move 1 from  C to B
|  |  |
|  |  |
|  1  |
3  2  |
move 3 from  A to C
|  |  |
|  |  |
|  1  |
|  2  3
move 1 from  B to A
|  |  |
|  |  |
|  |  |
1  2  3
move 2 from  B to C
|  |  |
|  |  |
|  |  2
1  |  3
move 1 from  A to C
|  |  |
|  |  1
|  |  2
|  |  3
Enter Input : 4
|  |  |
1  |  |
2  |  |
3  |  |
4  |  |
move 1 from  A to B
|  |  |
|  |  |
2  |  |
3  |  |
4  1  |
move 2 from  A to C
|  |  |
|  |  |
|  |  |
3  |  |
4  1  2
move 1 from  B to C
|  |  |
|  |  |
|  |  |
3  |  1
4  |  2
move 3 from  A to B
|  |  |
|  |  |
|  |  |
|  |  1
4  3  2
move 1 from  C to A
|  |  |
|  |  |
|  |  |
1  |  |
4  3  2
move 2 from  C to B
|  |  |
|  |  |
|  |  |
1  2  |
4  3  |
move 1 from  A to B
|  |  |
|  |  |
|  1  |
|  2  |
4  3  |
move 4 from  A to C
|  |  |
|  |  |
|  1  |
|  2  |
|  3  4
move 1 from  B to C
|  |  |
|  |  |
|  |  |
|  2  1
|  3  4
move 2 from  B to A
|  |  |
|  |  |
|  |  |
|  |  1
2  3  4
move 1 from  C to A
|  |  |
|  |  |
|  |  |
1  |  |
2  3  4
move 3 from  B to C
|  |  |
|  |  |
|  |  |
1  |  3
2  |  4
move 1 from  A to B
|  |  |
|  |  |
|  |  |
|  |  3
2  1  4
move 2 from  A to C
|  |  |
|  |  |
|  |  2
|  |  3
|  1  4
move 1 from  B to C
|  |  |
|  |  1
|  |  2
|  |  3
|  |  4


Chapter : 6 - item : 5 - ดาวเคราะห์น้อย
 ส่งมาแล้ว 0 ครั้ง
นักศึกษาจะได้รับ Input เป็น list<int> ของดาวเคราะห์น้อย
สำหรับดาวเคราะห์น้อยแต่ละดวงนั้น ค่าสัมบูรณ์ จะแสดงขนาดของมัน และเครื่องหมายแสดงถึงทิศทางของมัน (ถ้าเลขเป็นบวกแสดงว่าวิ่งไปทางขวา ,ลบทางซ้าย) โดยที่ดาวเคราะห์น้อยแต่ละดวงเคลื่อนที่ด้วยความเร็วเท่ากัน
ค้นหาสถานะของดาวเคราะห์น้อยหลังจากการชนกันทั้งหมด
1.หากดาวเคราะห์น้อยสองดวงมาพบกันดวงที่เล็กกว่าจะระเบิด
2.ถ้าทั้งสองมีขนาดเท่ากันทั้งคู่จะระเบิด
3.ดาวเคราะห์น้อยสองดวงที่เคลื่อนที่ไปในทิศทางเดียวกันจะไม่มีวันพบกัน
****ห้ามใช้คำสั่ง for, while, do while*****
หมายเหตุ ฟังก์ชันมี parameter ได้ไม่เกิน 2 ตัว
def asteroid_collision(asts):
    #Code Here
x = input("Enter Input : ").split(",")
x = list(map(int,x))
print(asteroid_collision(x))
Enter Input : -2, -1, 1, 2
[-2, -1, 1, 2]
Enter Input : -2, 1, 1, -2
[-2, -2]
Enter Input : 1, 1, -2, -2
[-2, -2]
Enter Input : 10, 2, -5
[10]
Enter Input : 2,-2,3,4
[3, 4]
Enter Input : 4,2,3,-3
[4, 2]